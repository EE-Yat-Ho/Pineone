### 2. 이유리 전임님 함수형 프로그래밍 세미나
20201007 이유리 전임님 함수형 프로그래밍

함수를 이용하여 / 부수효과 없이 / 선언형 프로그래밍을 하는 것.

동일한 인풋에 대해 동일한 아웃풋을 내는 함수 !
상태 변화를 배제 !
어떤 결과를 얻을 것인지에 초점 !

함수형 프로그래밍은 객체지향보다 먼저나왔었음
그런데 묻혔음
근데 다시 주목받음
“동시성”과 “불변성” 덕분!
=> 협업, 대규모 병렬처리에 유리해서그럼!

Swift는 완전한 함수형 프로그래밍 언어는 아니다.
하지만 함수는 스위프트에서 중요한 역할을 한다.

struct에서 사용할 수 있는 callAsFunction을 스위프트5.2에 추가하였는데 이를 보아 함수형을 지향함을 알 수 있음

정책임님 : 객체지향과 함수형은 대립관계가 아니여
구조는 객체지향으로 잡고 처리를 함수형으로 한다 이말이여

함수형 vs 객체지향형
명령형 vs 선언형
함수형 프로그래밍 특징 : 일급시민 
으음…. 

순수함수 : 같은 인풋에 무조건 같은 아웃풋
고차함수 : 파라미터로 함수를 받는 함수(map, filter, reduce 등)
커링 Currying : 여러 파라미터를 받는 함수를 하나의 파라미터를 받는 여러 함수로 나누는 것
함수의 합성을 원할하게 하기 위한 행동

함수형 프로그래밍의 이점
1. Lazy Evalution : 함수형으로 넘겨줘서.. 메모리 절약.. 으음..
2. Lazy Sequence : 배열중에 필요한 놈만 연산해서 들고오는 그거 ㅇㅇ